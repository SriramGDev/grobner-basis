

# This file was *autogenerated* from the file bound.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3)
def asymptotic_bound(delta, n, l):
    # returns the asymptotic bound of Bardet, Faug\'ere, and Salvy for a homogeneous system of degree delta and dimension l in a polynomial ring with n variables
    var('x')
    eqn = _sage_const_1 /(_sage_const_1 -delta*((x+_sage_const_1 )**_sage_const_2 -x**_sage_const_2 )/((x+_sage_const_1 )**_sage_const_3 -x**_sage_const_3 ))-((x+_sage_const_1 )/x)**(_sage_const_2 *delta)
    lam_0 = eqn.find_root((delta-_sage_const_1 )/_sage_const_2 ,delta-_sage_const_1 )
    A = (_sage_const_1 -delta**(-_sage_const_1 ))/(_sage_const_2 *pi)*((_sage_const_1 +lam_0**(-_sage_const_1 ))**_sage_const_3 -_sage_const_1 )/(_sage_const_1 +lam_0)**(_sage_const_1 +l)
    B = (((lam_0+_sage_const_1 )/lam_0)**(_sage_const_2 *delta)-_sage_const_1 )/(_sage_const_1 /lam_0**_sage_const_2 -_sage_const_1 /(lam_0+_sage_const_1 )**_sage_const_2 )
    return n*A*B**n





